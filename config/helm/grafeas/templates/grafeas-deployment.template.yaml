apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: {{ .Values.global.name }}
 namespace: {{ index .Values.global.clusterNamespace .Values.global.env }}
 labels:
  microservice: {{ .Values.global.name }}
spec:
  selector:
    matchLabels:
      microservice: {{ .Values.global.name }}
  revisionHistoryLimit: 10
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      microservice: {{ .Values.global.name }}
  template:
    metadata:
      labels:
        microservice: {{ .Values.global.name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: servicename
                operator: In
                values:
                - security-advisor
      imagePullSecrets:
      - name: bluemix-{{ index .Values.global.clusterNamespace .Values.global.env }}-secret
      containers:
      - image: {{ index .Values.global.registryHostName .Values.global.env }}/{{ index .Values.global.registryNamespace .Values.global.env }}/{{ index .Values.global.imageName .Values.global.env }}:{{ .Values.global.tag | default "dummy" }}
        name: {{ .Values.global.name }}
        imagePullPolicy: IfNotPresent
        env:
        - name: IAM_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamBaseUrl
        - name: IAM_API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamApiBaseUrl
        - name: CLOUDANT_URL
          valueFrom:
            secretKeyRef:
              name: cloudant-credentials
              key: cloudant_url_no_creds
        - name: GRAFEAS_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: grafeasDB
        - name: CLOUDANT_USERNAME
          valueFrom:
            secretKeyRef:
              name: cloudant-credentials
              key: cloudant_username
        - name: CLOUDANT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudant-credentials
              key: cloudant_password
        - name: ACCEPT_HTTP
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: acceptHttp
        - name: DELETE_OCCURRENCES_PAGE_SIZE
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: deleteOccurrencesPageSize
        - name: GRAFEAS_CONFIGURE_SSL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: grafeasConfigureSsl
        - name: SSL_KEY_PATH
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: sslKeyPath
        - name: SSL_CERT_PATH
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: sslCertPath
        - name: AUTH_CLIENT_CLASS_NAME
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: grafeasAuthClassName
        - name: IAM_TOKEN_VALIDATION_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamTokenValidationURL
        - name: IAM_TOKEN_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamTokenURL
        - name: IAM_PDP_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamPDPURL
        - name: IAM_PAP_URL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: iamPAPURL
        - name: IAM_CONFIG
          valueFrom:
            secretKeyRef:
              name: sa-iam-secrets
              key: iamConfig
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: logLevel
        - name: GLOBAL_SCOPE_SERVICES
          valueFrom:
            configMapKeyRef:
              name: grafeas-configuration
              key: globalScopeServices
        ports:
        - containerPort: 8080
          protocol: TCP

        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30

        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30

        volumeMounts:
        - name: secrets
          mountPath: {{ .Values.global.certificateSecretMountPath }}
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: grafeas-certificates-credentials
