---
swagger: '2.0'
info:
  title: v1alpha1/proto/grafeas.proto
  version: version not set
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1alpha1/projects:
    get:
      summary: Lists `Projects`
      operationId: ListProjects
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiListProjectsResponse'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: filter
          description: The filter expression.
          in: query
          required: false
          type: string
        - name: page_size
          description: Number of projects to return in the list.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Token to provide to skip to a particular spot in the list.
          in: query
          required: false
          type: string
      tags:
        - GrafeasProjects
    post:
      summary: Creates a new `Project`.
      operationId: CreateProject
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiEmpty'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/apiProject'
      tags:
        - GrafeasProjects
  /v1alpha1/projects/{project_id}:
    get:
      summary: Returns the requested `Project`.
      operationId: GetProject
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiProject'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This field contains the project_id for example: projects/{project_id}"
          required: true
          type: string
      tags:
        - GrafeasProjects
    delete:
      summary: Deletes the given `Project` from the system.
      operationId: DeleteProject
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiEmpty'
      parameters:
        - name: Account
          description: "The unique ID for your cloud account."
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This field contains the project_id for example: projects/{project_id}"
          required: true
          type: string
      tags:
        - GrafeasProjects


  /v1alpha1/projects/{project_id}/notes:
    get:
      summary: Lists all `Notes` for a given project.
      operationId: ListNotes
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiListNotesResponse'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This field contains the project_id for example: projects/{project_id}"
          required: true
          type: string
        - name: filter
          description: The filter expression.
          in: query
          required: false
          type: string
        - name: page_size
          description: Number of notes to return in the list.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Token to provide to skip to a particular spot in the list.
          in: query
          required: false
          type: string
      tags:
        - GrafeasNotes
    post:
      summary: Creates a new `Note`.
      operationId: CreateNote
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiNote'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This field contains the project_id for example: projects/{project_id}"
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/apiNote'
      tags:
        - GrafeasNotes
  /v1alpha1/projects/{project_id}/notes/{note_id}:
    get:
      summary: Returns the requested `Note`.
      operationId: GetNote
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiNote'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: note_id
          in: path
          description: "Second part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
      tags:
        - GrafeasNotes
    put:
      summary: Updates an existing `Note`.
      operationId: UpdateNote
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiNote'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: note_id
          in: path
          description: "Second part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/apiNote'
      tags:
        - GrafeasNotes
    delete:
      summary: Deletes the given `Note` from the system.
      operationId: DeleteNote
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiEmpty'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: note_id
          in: path
          description: "Second part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
      tags:
        - GrafeasNotes

  /v1alpha1/projects/{project_id}/occurrences/{occurrence_id}/notes:
    get:
      summary: Gets the `Note` attached to the given `Occurrence`.
      operationId: GetOccurrenceNote
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiNote'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: string
        - name: occurrence_id
          in: path
          description: "Second part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: "string"
      tags:
        - GrafeasNotes

  /v1alpha1/projects/{project_id}/occurrences:
    get:
      summary: Lists active `Occurrences` for a given project matching the filters.
      operationId: ListOccurrences
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiListOccurrencesResponse'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This contains the project_id for example: projects/{project_id}"
          required: true
          type: string
        - name: filter
          description: The filter expression.
          in: query
          required: false
          type: string
        - name: page_size
          description: Number of occurrences to return in the list.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Token to provide to skip to a particular spot in the list.
          in: query
          required: false
          type: string
      tags:
        - GrafeasOccurrences
    post:
      summary: |-
        Creates a new `Occurrence`. Use this method to create `Occurrences`
        for a resource.
      operationId: CreateOccurrence
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiOccurrence'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "Part of `parent`. This contains the project_id for example: projects/{project_id}"
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/apiOccurrence'
      tags:
        - GrafeasOccurrences

  /v1alpha1/projects/{project_id}/occurrences/{occurrence_id}:
    get:
      summary: Returns the requested `Occurrence`.
      operationId: GetOccurrence
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiOccurrence'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: string
        - name: occurrence_id
          in: path
          description: "Second part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: string
      tags:
        - GrafeasOccurrences
    put:
      summary: Updates an existing `Occurrence`.
      operationId: UpdateOccurrence
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiOccurrence'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: string
        - name: occurrence_id
          in: path
          description: "Second part of occurrence `name`: projects/{project_id}/occurrences/{occurrence_id}"
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/apiNote'
      tags:
        - GrafeasOccurrences
    delete:
      summary: Deletes the given `Occurrence` from the system.
      operationId: DeleteOccurrence
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiEmpty'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of occurrence `name`: projects/{project_id}/notes/{occurrence_id}"
          required: true
          type: string
        - name: occurrence_id
          in: path
          description: "Second part of occurrence `name`: projects/{project_id}/notes/{occurrence_id}"
          required: true
          type: string
      tags:
        - GrafeasOccurrences

  /v1alpha1/projects/{project_id}/notes/{note_id}/occurrences:
    get:
      summary: |-
        Lists `Occurrences` referencing the specified `Note`. Use this method to
        get all occurrences referencing your `Note` across all your customer
        projects.
      operationId: ListNoteOccurrences
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/apiListNoteOccurrencesResponse'
      parameters:
        - name: Account
          description: The unique ID for your cloud account.
          in: header
          required: true
          type: string
        - name: Authorization
          description: The user authentication agent (UAA) or the Identity & Access Management (IAM) JSON web token
          in: header
          required: true
          type: string
        - name: project_id
          in: path
          description: "First part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: note_id
          in: path
          description: "Second part of note `name`: projects/{project_id}/notes/{note_id}"
          required: true
          type: string
        - name: filter
          description: The filter expression.
          in: query
          required: false
          type: string
        - name: page_size
          description: Number of notes to return in the list.
          in: query
          required: false
          type: integer
          format: int32
        - name: page_token
          description: Token to provide to skip to a particular spot in the list.
          in: query
          required: false
          type: string
      tags:
        - GrafeasOccurrences

definitions:
  apiCertainty:
    type: string
    enum:
      - CERTAINTY_UNSPECIFIED
      - LOW
      - MEDIUM
      - HIGH
    default: CERTAINTY_UNSPECIFIED
    description: |-
      Note provider-assigned confidence on the validity of an occurrence
      - CONFIDENCE_UNSPECIFIED&#58; Unknown Certainty
      - LOW&#58; Low Certainty
      - MEDIUM&#58; Medium Certainty
      - HIGH&#58; High Certainty

  apiEmpty:
    type: object
    description: |-
      A generic empty message that you can re-use to avoid defining duplicated
      empty messages in your APIs. A typical example is to use it as the request
      or the response type of an API method.
      The JSON representation for `Empty` is empty JSON object `{}`.

  apiListNoteOccurrencesResponse:
    type: object
    properties:
      occurrences:
        type: array
        items:
          $ref: '#/definitions/apiOccurrence'
        description: The occurrences attached to the specified note.
      next_page_token:
        type: string
        description: Token to receive the next page of notes.
    description: Response including listed occurrences for a note.

  apiListNotesResponse:
    type: object
    properties:
      notes:
        type: array
        items:
          $ref: '#/definitions/apiNote'
        title: The occurrences requested
      next_page_token:
        type: string
        description: |-
          The next pagination token in the list response. It should be used as
          page_token for the following request. An empty value means no more result.
    description: Response including listed notes.

  apiListOccurrencesResponse:
    type: object
    properties:
      occurrences:
        type: array
        items:
          $ref: '#/definitions/apiOccurrence'
        description: The occurrences requested.
      next_page_token:
        type: string
        description: |-
          The next pagination token in the list response. It should be used as
          `page_token` for the following request. An empty value means no more
          results.
    description: Response including listed active occurrences.

  apiListProjectsResponse:
    type: object
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/apiProject'
        description: The projects requested.
      next_page_token:
        type: string
        description: |-
          The next pagination token in the list response. It should be used as
          `page_token` for the following request. An empty value means no more
          results.
    description: Response including listed projects

  apiNote:
    type: object
    properties:
      project_id:
        type: string
        title: The project id of the note
      id:
        type: string
        title: The id of the note
      name:
        type: string
        title: |-
          The name of the note in the form "projects/{project_id}/notes/{note_id}"
      short_description:
        type: string
        description: A one sentence description of this `Note`.
      long_description:
        type: string
        description: A detailed description of this `Note`.
      kind:
        $ref: '#/definitions/apiNoteKind'
        description: |-
          Output only. This explicitly denotes which kind of note is specified. This
          field can be used as a filter in list requests.
      related_url:
        type: array
        items:
          $ref: '#/definitions/apiNoteRelatedUrl'
        title: URLs associated with this note
      expiration_time:
        type: string
        format: date-time
        description: 'Time of expiration for this note, null if note does not expire.'
      create_time:
        type: string
        format: date-time
        description: |-
          Output only. The time this note was created.
          This field can be used as a filter in list requests.
      update_time:
        type: string
        format: date-time
        description: |-
          Output only. The time this note was last updated.
          This field can be used as a filter in list requests.
      vulnerability_type:
        $ref: '#/definitions/VulnerabilityType'
        description: A package vulnerability type of note.

      #
      # IBM extensions start here
      #
      finding:
        $ref: '#/definitions/FindingType'
        description: A finding type of note.
      kpi:
        $ref: '#/definitions/KpiType'
        description: A kpi type of note.
      #
      # IBM extensions stop here
      #
    description: Provides a detailed description of a `Note`.

  apiNoteKind:
    type: string
    enum:
      - KIND_UNSPECIFIED
      - PACKAGE_VULNERABILITY
      - FINDING
      - KPI
    default: KIND_UNSPECIFIED
    description: |-
      This must be 1&#58;1 with members of our oneofs, it can be used for filtering
      Note and Occurrence on their kind.
       - KIND_UNSPECIFIED&#58; Unknown
       - PACKAGE_VULNERABILITY&#58; The note and occurrence represent a package vulnerability.
       - FINDING&#58; The note and occurrence represent a finding.
       - KPI&#58; The note and occurrence represent a KPI.

  apiNoteRelatedUrl:
    type: object
    properties:
      url:
        type: string
        title: Specific URL to associate with the note
      label:
        type: string
        title: Label to describe usage of the URL
    description: Metadata for any related URL information

  apiOccurrence:
    type: object
    properties:
      project_id:
        type: string
        title: The project id of the occurrence
      id:
        type: string
        title: The id of the occurrence
      name:
        type: string
        description: |-
          Output only. The name of the `Occurrence` in the form "projects/{project_id}/occurrences/{occuurence_id}"
      resource_url:
        type: string
        description: |-
          The unique URL of the resource, image or the container, for which the `Occurrence` applies.
          For example, https://gcr.io/project/image@sha256:foo.
          This field can be used as a filter in list requests.
      note_name:
        type: string
        description: |-
          An analysis note associated with this image, in the form "projects/{project_id}/notes/{note_id}"
          This field can be used as a filter in list requests.
      kind:
        $ref: '#/definitions/apiNoteKind'
        description: |-
          Output only. This explicitly denotes which of the `Occurrence` details are specified.
          This field can be used as a filter in list requests.
      remediation:
        type: string
        title: A description of actions that can be taken to remedy the `Note`
      create_time:
        type: string
        format: date-time
        description: Output only. The time this `Occurrence` was created.
      update_time:
        type: string
        format: date-time
        description: Output only. The time this `Occurrence` was last updated.
      vulnerability_details:
        $ref: '#/definitions/VulnerabilityTypeVulnerabilityDetails'
        description: Details of the occurrence of a security vulnerability.

      #
      # IBM extensions start here
      #
      short_description:
        type: string
        description: A one sentence description of this `Occurrence`.
      long_description:
        type: string
        description: A detailed description of this `Occurrence`.
      context:
        $ref: '#/definitions/apiContext'
        description: Details about the resource this `Occurrence` applies to
      finding:
        $ref: '#/definitions/Finding'
        description: Details of the occurrence of a finding.
      kpi:
        $ref: '#/definitions/Kpi'
        description: Details of the occurrence of a kpi.
      #
      # IBM extensions stop here
      #
    description: '`Occurrence` includes information about analysis occurrences for an image.'

  apiProject:
    type: object
    properties:
      id:
        type: string
        title: The id of the project
      name:
        type: string
        title: The name of the project of the form "projects/{project_id}"
    description: Provides detailed description of a `Project`.

  apiContext:
    type: object
    properties:
      source_url:
        type: string
        description: The unique url of the source (e.g. service, app) of the occurrence
      region:
        type: string
        description: The region the resource belongs to
      account:
        type: string
        description: The account the resource belongs to
      service:
        type: string
        description: The service managing the resource
      environment_name:
        type: string
        description: The name of the logical environment the resource is linked to
      component_name:
        type: string
        description: The name of the logical component the resource is linked to
      toolchain_url:
        type: string
        description: The url of the toolchain the resource is linked to

  apiSeverity:
    type: string
    enum:
      - SEVERITY_UNSPECIFIED
      - LOW
      - MEDIUM
      - HIGH
    default: SEVERITY_UNSPECIFIED
    description: |-
      Note provider-assigned severity/impact ranking
      - SEVERITY_UNSPECIFIED&#58; Unknown Impact
      - LOW&#58; Low Impact
      - MEDIUM&#58; Medium Impact
      - HIGH&#58; High Impact

#
# Finding note and occurrence definitions
#
  FindingType:
    type: object
    description: FindingType provides details about a finding note.
    properties:
      severity:
        $ref: '#/definitions/apiSeverity'
        description: The common severity of this `Note`

  Finding:
    type: object
    description: Finding provides details about a finding occurrence.
    properties:
      severity:
        $ref: '#/definitions/apiSeverity'
        description: The common severity of this `Occurrence`
      certainty:
        $ref: '#/definitions/apiCertainty'
        description: The confidence level on this `Occurrence`
#
# KPI note and occurrence definitions
#
  KpiType:
    type: object
    description: KpiType provides details about a kpi note.
    properties:
      aggretationType:
        type: string
        description: The aggregation type of the kpi values
  Kpi:
    type: object
    description: Kpi provides details about a KPI occurrence.
    properties:
      value:
        type: number
        description: The value on this KPI

#
# Vulnerability note and occurrence definitions
#
  VulnerabilityType:
    type: object
    properties:
      cvss_score:
        type: number
        format: float
        description: The CVSS score for this Vulnerability.
      severity:
        $ref: '#/definitions/VulnerabilityTypeSeverity'
        title: Note provider assigned impact of the vulnerability
      details:
        type: array
        items:
          $ref: '#/definitions/VulnerabilityTypeDetail'
        description: |-
          All information about the package to specifically identify this
          vulnerability. One entry per (version range and cpe_uri) the
          package vulnerability has manifested in.
    description: VulnerabilityType provides metadata about a security vulnerability.

  VersionVersionKind:
    type: string
    enum:
      - NORMAL
      - MINIMUM
      - MAXIMUM
    default: NORMAL
    description: |-
      Whether this is an ordinary package version or a
      sentinel MIN/MAX version.
       - NORMAL&#58; A standard package version, defined by the other fields.
       - MINIMUM&#58; A special version representing negative infinity,
      other fields are ignored.
       - MAXIMUM&#58; A special version representing positive infinity,
      other fields are ignored.

  VulnerabilityTypeDetail:
    type: object
    properties:
      cpe_uri:
        type: string
        description: |-
          The cpe_uri in [cpe format] (https&#58;//cpe.mitre.org/specification/) in
          which the vulnerability manifests. Examples include distro or storage
          location for vulnerable jar.
          This field can be used as a filter in list requests.
      package:
        type: string
        description: |-
          The name of the package where the vulnerability was found.
          This field can be used as a filter in list requests.
      min_affected_version:
        $ref: '#/definitions/VulnerabilityTypeVersion'
        description: The min version of the package in which the vulnerability exists.
      max_affected_version:
        $ref: '#/definitions/VulnerabilityTypeVersion'
        description: |-
          The max version of the package in which the vulnerability exists.
          This field can be used as a filter in list requests.
      severity_name:
        type: string
        description: 'The severity (eg: distro assigned severity) for this vulnerability.'
      description:
        type: string
        description: A vendor-specific description of this note.
      fixed_location:
        $ref: '#/definitions/VulnerabilityTypeVulnerabilityLocation'
        description: The fix for this specific package version.
      package_type:
        type: string
        title: |-
          The type of package; whether native or non native(ruby gems,
          node.js packages etc)
    description: |-
      Identifies all occurrences of this vulnerability in the package for a
      specific distro/location
      For example&#58; glibc in cpe&#58;/o&#58;debian&#58;debian_linux&#58;8 for versions 2.1 - 2.2

  VulnerabilityTypePackageIssue:
    type: object
    properties:
      affected_location:
        $ref: '#/definitions/VulnerabilityTypeVulnerabilityLocation'
        description: The location of the vulnerability.
      fixed_location:
        $ref: '#/definitions/VulnerabilityTypeVulnerabilityLocation'
        description: The location of the available fix for vulnerability.
      severity_name:
        type: string
        description: 'The severity (eg: distro assigned severity) for this vulnerability.'
    description: |-
      This message wraps a location affected by a vulnerability and its
      associated fix (if one is available).

  VulnerabilityTypeSeverity:
    type: string
    enum:
      - SEVERITY_UNSPECIFIED
      - MINIMAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    default: SEVERITY_UNSPECIFIED
    description: |-
      Note provider-assigned severity/impact ranking
      - SEVERITY_UNSPECIFIED&#58; Unknown Impact
      - MINIMAL&#58; Minimal Impact
      - LOW&#58; Low Impact
      - MEDIUM&#58; Medium Impact
      - HIGH&#58; High Impact
      - CRITICAL&#58; Critical Impact

  VulnerabilityTypeVersion:
    type: object
    properties:
      epoch:
        type: integer
        format: int32
        description: Used to correct mistakes in the version numbering scheme.
      name:
        type: string
        description: The main part of the version name.
      revision:
        type: string
        description: The iteration of the package build from the above version.
      kind:
        $ref: '#/definitions/VersionVersionKind'
        description: |-
          Distinguish between sentinel MIN/MAX versions and normal versions.
          If kind is not NORMAL, then the other fields are ignored.
    description: |-
      Version contains structured information about the version of the package.
      For a discussion of this in Debian/Ubuntu&#58;
      http&#58;//serverfault.com/questions/604541/debian-packages-version-convention
      For a discussion of this in Redhat/Fedora/Centos&#58;
      http&#58;//blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/

  VulnerabilityTypeVulnerabilityDetails:
    type: object
    properties:
      type:
        type: string
        title: |-
          The type of package; whether native or non native(ruby gems,
          node.js packages etc)
      severity:
        $ref: '#/definitions/VulnerabilityTypeSeverity'
        description: Output only. The note provider assigned Severity of the vulnerability.
      cvss_score:
        type: number
        format: float
        description: |-
          Output only. The CVSS score of this vulnerability. CVSS score is on a
          scale of 0-10 where 0 indicates low severity and 10 indicates high
          severity.
      package_issue:
        type: array
        items:
          $ref: '#/definitions/VulnerabilityTypePackageIssue'
        description: |-
          The set of affected locations and their fixes (if available) within
          the associated resource.
    description: |-
      Used by Occurrence to point to where the vulnerability exists and how
      to fix it.

  VulnerabilityTypeVulnerabilityLocation:
    type: object
    properties:
      cpe_uri:
        type: string
        description: |-
          The cpe_uri in [cpe format] (https&#58;//cpe.mitre.org/specification/)
          format. Examples include distro or storage location for vulnerable jar.
          This field can be used as a filter in list requests.
      package:
        type: string
        description: The package being described.
      version:
        $ref: '#/definitions/VulnerabilityTypeVersion'
        description: |-
          The version of the package being described.
          This field can be used as a filter in list requests.
    description: The location of the vulnerability
