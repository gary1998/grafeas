# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_alias_context_kind import ApiAliasContextKind
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiAliasContext(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, kind: ApiAliasContextKind=None, name: str=None):
        """
        ApiAliasContext - a model defined in Swagger

        :param kind: The kind of this ApiAliasContext.
        :type kind: ApiAliasContextKind
        :param name: The name of this ApiAliasContext.
        :type name: str
        """
        self.swagger_types = {
            'kind': ApiAliasContextKind,
            'name': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'name': 'name'
        }

        self._kind = kind
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'ApiAliasContext':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiAliasContext of this ApiAliasContext.
        :rtype: ApiAliasContext
        """
        return deserialize_model(dikt, cls)

    @property
    def kind(self) -> ApiAliasContextKind:
        """
        Gets the kind of this ApiAliasContext.
        The alias kind.

        :return: The kind of this ApiAliasContext.
        :rtype: ApiAliasContextKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind: ApiAliasContextKind):
        """
        Sets the kind of this ApiAliasContext.
        The alias kind.

        :param kind: The kind of this ApiAliasContext.
        :type kind: ApiAliasContextKind
        """

        self._kind = kind

    @property
    def name(self) -> str:
        """
        Gets the name of this ApiAliasContext.
        The alias name.

        :return: The name of this ApiAliasContext.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this ApiAliasContext.
        The alias name.

        :param name: The name of this ApiAliasContext.
        :type name: str
        """

        self._name = name

