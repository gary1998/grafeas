# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_build_provenance import ApiBuildProvenance
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiBuildDetails(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, provenance: ApiBuildProvenance=None, provenance_bytes: str=None):
        """
        ApiBuildDetails - a model defined in Swagger

        :param provenance: The provenance of this ApiBuildDetails.
        :type provenance: ApiBuildProvenance
        :param provenance_bytes: The provenance_bytes of this ApiBuildDetails.
        :type provenance_bytes: str
        """
        self.swagger_types = {
            'provenance': ApiBuildProvenance,
            'provenance_bytes': str
        }

        self.attribute_map = {
            'provenance': 'provenance',
            'provenance_bytes': 'provenance_bytes'
        }

        self._provenance = provenance
        self._provenance_bytes = provenance_bytes

    @classmethod
    def from_dict(cls, dikt) -> 'ApiBuildDetails':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiBuildDetails of this ApiBuildDetails.
        :rtype: ApiBuildDetails
        """
        return deserialize_model(dikt, cls)

    @property
    def provenance(self) -> ApiBuildProvenance:
        """
        Gets the provenance of this ApiBuildDetails.

        :return: The provenance of this ApiBuildDetails.
        :rtype: ApiBuildProvenance
        """
        return self._provenance

    @provenance.setter
    def provenance(self, provenance: ApiBuildProvenance):
        """
        Sets the provenance of this ApiBuildDetails.

        :param provenance: The provenance of this ApiBuildDetails.
        :type provenance: ApiBuildProvenance
        """

        self._provenance = provenance

    @property
    def provenance_bytes(self) -> str:
        """
        Gets the provenance_bytes of this ApiBuildDetails.
        Serialized JSON representation of the provenance, used in generating the `BuildSignature` in the corresponding Result. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification.  The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes.

        :return: The provenance_bytes of this ApiBuildDetails.
        :rtype: str
        """
        return self._provenance_bytes

    @provenance_bytes.setter
    def provenance_bytes(self, provenance_bytes: str):
        """
        Sets the provenance_bytes of this ApiBuildDetails.
        Serialized JSON representation of the provenance, used in generating the `BuildSignature` in the corresponding Result. After verifying the signature, `provenance_bytes` can be unmarshalled and compared to the provenance to confirm that it is unchanged. A base64-encoded string representation of the provenance bytes is used for the signature in order to interoperate with openssl which expects this format for signature verification.  The serialized form is captured both to avoid ambiguity in how the provenance is marshalled to json as well to prevent incompatibilities with future changes.

        :param provenance_bytes: The provenance_bytes of this ApiBuildDetails.
        :type provenance_bytes: str
        """

        self._provenance_bytes = provenance_bytes

