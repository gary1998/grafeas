# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_alias_context import ApiAliasContext
from swagger_server.models.api_repo_id import ApiRepoId
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiCloudRepoSourceContext(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, repo_id: ApiRepoId=None, revision_id: str=None, alias_context: ApiAliasContext=None):
        """
        ApiCloudRepoSourceContext - a model defined in Swagger

        :param repo_id: The repo_id of this ApiCloudRepoSourceContext.
        :type repo_id: ApiRepoId
        :param revision_id: The revision_id of this ApiCloudRepoSourceContext.
        :type revision_id: str
        :param alias_context: The alias_context of this ApiCloudRepoSourceContext.
        :type alias_context: ApiAliasContext
        """
        self.swagger_types = {
            'repo_id': ApiRepoId,
            'revision_id': str,
            'alias_context': ApiAliasContext
        }

        self.attribute_map = {
            'repo_id': 'repo_id',
            'revision_id': 'revision_id',
            'alias_context': 'alias_context'
        }

        self._repo_id = repo_id
        self._revision_id = revision_id
        self._alias_context = alias_context

    @classmethod
    def from_dict(cls, dikt) -> 'ApiCloudRepoSourceContext':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiCloudRepoSourceContext of this ApiCloudRepoSourceContext.
        :rtype: ApiCloudRepoSourceContext
        """
        return deserialize_model(dikt, cls)

    @property
    def repo_id(self) -> ApiRepoId:
        """
        Gets the repo_id of this ApiCloudRepoSourceContext.
        The ID of the repo.

        :return: The repo_id of this ApiCloudRepoSourceContext.
        :rtype: ApiRepoId
        """
        return self._repo_id

    @repo_id.setter
    def repo_id(self, repo_id: ApiRepoId):
        """
        Sets the repo_id of this ApiCloudRepoSourceContext.
        The ID of the repo.

        :param repo_id: The repo_id of this ApiCloudRepoSourceContext.
        :type repo_id: ApiRepoId
        """

        self._repo_id = repo_id

    @property
    def revision_id(self) -> str:
        """
        Gets the revision_id of this ApiCloudRepoSourceContext.
        A revision ID.

        :return: The revision_id of this ApiCloudRepoSourceContext.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id: str):
        """
        Sets the revision_id of this ApiCloudRepoSourceContext.
        A revision ID.

        :param revision_id: The revision_id of this ApiCloudRepoSourceContext.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def alias_context(self) -> ApiAliasContext:
        """
        Gets the alias_context of this ApiCloudRepoSourceContext.
        An alias, which may be a branch or tag.

        :return: The alias_context of this ApiCloudRepoSourceContext.
        :rtype: ApiAliasContext
        """
        return self._alias_context

    @alias_context.setter
    def alias_context(self, alias_context: ApiAliasContext):
        """
        Sets the alias_context of this ApiCloudRepoSourceContext.
        An alias, which may be a branch or tag.

        :param alias_context: The alias_context of this ApiCloudRepoSourceContext.
        :type alias_context: ApiAliasContext
        """

        self._alias_context = alias_context

