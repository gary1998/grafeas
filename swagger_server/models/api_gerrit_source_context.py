# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_alias_context import ApiAliasContext
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiGerritSourceContext(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, host_uri: str=None, gerrit_project: str=None, revision_id: str=None, alias_context: ApiAliasContext=None):
        """
        ApiGerritSourceContext - a model defined in Swagger

        :param host_uri: The host_uri of this ApiGerritSourceContext.
        :type host_uri: str
        :param gerrit_project: The gerrit_project of this ApiGerritSourceContext.
        :type gerrit_project: str
        :param revision_id: The revision_id of this ApiGerritSourceContext.
        :type revision_id: str
        :param alias_context: The alias_context of this ApiGerritSourceContext.
        :type alias_context: ApiAliasContext
        """
        self.swagger_types = {
            'host_uri': str,
            'gerrit_project': str,
            'revision_id': str,
            'alias_context': ApiAliasContext
        }

        self.attribute_map = {
            'host_uri': 'host_uri',
            'gerrit_project': 'gerrit_project',
            'revision_id': 'revision_id',
            'alias_context': 'alias_context'
        }

        self._host_uri = host_uri
        self._gerrit_project = gerrit_project
        self._revision_id = revision_id
        self._alias_context = alias_context

    @classmethod
    def from_dict(cls, dikt) -> 'ApiGerritSourceContext':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiGerritSourceContext of this ApiGerritSourceContext.
        :rtype: ApiGerritSourceContext
        """
        return deserialize_model(dikt, cls)

    @property
    def host_uri(self) -> str:
        """
        Gets the host_uri of this ApiGerritSourceContext.
        The URI of a running Gerrit instance.

        :return: The host_uri of this ApiGerritSourceContext.
        :rtype: str
        """
        return self._host_uri

    @host_uri.setter
    def host_uri(self, host_uri: str):
        """
        Sets the host_uri of this ApiGerritSourceContext.
        The URI of a running Gerrit instance.

        :param host_uri: The host_uri of this ApiGerritSourceContext.
        :type host_uri: str
        """

        self._host_uri = host_uri

    @property
    def gerrit_project(self) -> str:
        """
        Gets the gerrit_project of this ApiGerritSourceContext.
        The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.

        :return: The gerrit_project of this ApiGerritSourceContext.
        :rtype: str
        """
        return self._gerrit_project

    @gerrit_project.setter
    def gerrit_project(self, gerrit_project: str):
        """
        Sets the gerrit_project of this ApiGerritSourceContext.
        The full project name within the host. Projects may be nested, so \"project/subproject\" is a valid project name. The \"repo name\" is the hostURI/project.

        :param gerrit_project: The gerrit_project of this ApiGerritSourceContext.
        :type gerrit_project: str
        """

        self._gerrit_project = gerrit_project

    @property
    def revision_id(self) -> str:
        """
        Gets the revision_id of this ApiGerritSourceContext.
        A revision (commit) ID.

        :return: The revision_id of this ApiGerritSourceContext.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id: str):
        """
        Sets the revision_id of this ApiGerritSourceContext.
        A revision (commit) ID.

        :param revision_id: The revision_id of this ApiGerritSourceContext.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def alias_context(self) -> ApiAliasContext:
        """
        Gets the alias_context of this ApiGerritSourceContext.
        An alias, which may be a branch or tag.

        :return: The alias_context of this ApiGerritSourceContext.
        :rtype: ApiAliasContext
        """
        return self._alias_context

    @alias_context.setter
    def alias_context(self, alias_context: ApiAliasContext):
        """
        Sets the alias_context of this ApiGerritSourceContext.
        An alias, which may be a branch or tag.

        :param alias_context: The alias_context of this ApiGerritSourceContext.
        :type alias_context: ApiAliasContext
        """

        self._alias_context = alias_context

