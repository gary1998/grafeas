# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.byte_array import ByteArray
from swagger_server.models.hash_hash_type import HashHashType
import re
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiHash(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, type: HashHashType=None, value: ByteArray=None):
        """
        ApiHash - a model defined in Swagger

        :param type: The type of this ApiHash.
        :type type: HashHashType
        :param value: The value of this ApiHash.
        :type value: ByteArray
        """
        self.swagger_types = {
            'type': HashHashType,
            'value': ByteArray
        }

        self.attribute_map = {
            'type': 'type',
            'value': 'value'
        }

        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ApiHash':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiHash of this ApiHash.
        :rtype: ApiHash
        """
        return deserialize_model(dikt, cls)

    @property
    def type(self) -> HashHashType:
        """
        Gets the type of this ApiHash.
        The type of hash that was performed.

        :return: The type of this ApiHash.
        :rtype: HashHashType
        """
        return self._type

    @type.setter
    def type(self, type: HashHashType):
        """
        Sets the type of this ApiHash.
        The type of hash that was performed.

        :param type: The type of this ApiHash.
        :type type: HashHashType
        """

        self._type = type

    @property
    def value(self) -> ByteArray:
        """
        Gets the value of this ApiHash.
        The hash value.

        :return: The value of this ApiHash.
        :rtype: ByteArray
        """
        return self._value

    @value.setter
    def value(self, value: ByteArray):
        """
        Sets the value of this ApiHash.
        The hash value.

        :param value: The value of this ApiHash.
        :type value: ByteArray
        """
        if value is not None and not re.search('^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$', value):
            raise ValueError("Invalid value for `value`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/`")

        self._value = value

