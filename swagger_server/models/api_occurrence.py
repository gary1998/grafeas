# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_build_details import ApiBuildDetails
from swagger_server.models.api_note_kind import ApiNoteKind
from swagger_server.models.deployable_deployment import DeployableDeployment
from swagger_server.models.discovery_discovered import DiscoveryDiscovered
from swagger_server.models.docker_image_derived import DockerImageDerived
from swagger_server.models.package_manager_installation import PackageManagerInstallation
from swagger_server.models.vulnerability_type_vulnerability_details import VulnerabilityTypeVulnerabilityDetails
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiOccurrence(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name: str=None, resource_url: str=None, note_name: str=None, kind: ApiNoteKind=None, vulnerability_details: VulnerabilityTypeVulnerabilityDetails=None, build_details: ApiBuildDetails=None, derived_image: DockerImageDerived=None, installation: PackageManagerInstallation=None, deployment: DeployableDeployment=None, discovered: DiscoveryDiscovered=None, remediation: str=None, create_time: datetime=None, update_time: datetime=None):
        """
        ApiOccurrence - a model defined in Swagger

        :param name: The name of this ApiOccurrence.
        :type name: str
        :param resource_url: The resource_url of this ApiOccurrence.
        :type resource_url: str
        :param note_name: The note_name of this ApiOccurrence.
        :type note_name: str
        :param kind: The kind of this ApiOccurrence.
        :type kind: ApiNoteKind
        :param vulnerability_details: The vulnerability_details of this ApiOccurrence.
        :type vulnerability_details: VulnerabilityTypeVulnerabilityDetails
        :param build_details: The build_details of this ApiOccurrence.
        :type build_details: ApiBuildDetails
        :param derived_image: The derived_image of this ApiOccurrence.
        :type derived_image: DockerImageDerived
        :param installation: The installation of this ApiOccurrence.
        :type installation: PackageManagerInstallation
        :param deployment: The deployment of this ApiOccurrence.
        :type deployment: DeployableDeployment
        :param discovered: The discovered of this ApiOccurrence.
        :type discovered: DiscoveryDiscovered
        :param remediation: The remediation of this ApiOccurrence.
        :type remediation: str
        :param create_time: The create_time of this ApiOccurrence.
        :type create_time: datetime
        :param update_time: The update_time of this ApiOccurrence.
        :type update_time: datetime
        """
        self.swagger_types = {
            'name': str,
            'resource_url': str,
            'note_name': str,
            'kind': ApiNoteKind,
            'vulnerability_details': VulnerabilityTypeVulnerabilityDetails,
            'build_details': ApiBuildDetails,
            'derived_image': DockerImageDerived,
            'installation': PackageManagerInstallation,
            'deployment': DeployableDeployment,
            'discovered': DiscoveryDiscovered,
            'remediation': str,
            'create_time': datetime,
            'update_time': datetime
        }

        self.attribute_map = {
            'name': 'name',
            'resource_url': 'resource_url',
            'note_name': 'note_name',
            'kind': 'kind',
            'vulnerability_details': 'vulnerability_details',
            'build_details': 'build_details',
            'derived_image': 'derived_image',
            'installation': 'installation',
            'deployment': 'deployment',
            'discovered': 'discovered',
            'remediation': 'remediation',
            'create_time': 'create_time',
            'update_time': 'update_time'
        }

        self._name = name
        self._resource_url = resource_url
        self._note_name = note_name
        self._kind = kind
        self._vulnerability_details = vulnerability_details
        self._build_details = build_details
        self._derived_image = derived_image
        self._installation = installation
        self._deployment = deployment
        self._discovered = discovered
        self._remediation = remediation
        self._create_time = create_time
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt) -> 'ApiOccurrence':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiOccurrence of this ApiOccurrence.
        :rtype: ApiOccurrence
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """
        Gets the name of this ApiOccurrence.

        :return: The name of this ApiOccurrence.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this ApiOccurrence.

        :param name: The name of this ApiOccurrence.
        :type name: str
        """

        self._name = name

    @property
    def resource_url(self) -> str:
        """
        Gets the resource_url of this ApiOccurrence.
        The unique URL of the image or the container for which the `Occurrence` applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.

        :return: The resource_url of this ApiOccurrence.
        :rtype: str
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: str):
        """
        Sets the resource_url of this ApiOccurrence.
        The unique URL of the image or the container for which the `Occurrence` applies. For example, https://gcr.io/project/image@sha256:foo This field can be used as a filter in list requests.

        :param resource_url: The resource_url of this ApiOccurrence.
        :type resource_url: str
        """

        self._resource_url = resource_url

    @property
    def note_name(self) -> str:
        """
        Gets the note_name of this ApiOccurrence.
        An analysis note associated with this image, in the form \"projects/{projectId}/notes/{NOTE_ID}\" This field can be used as a filter in list requests.

        :return: The note_name of this ApiOccurrence.
        :rtype: str
        """
        return self._note_name

    @note_name.setter
    def note_name(self, note_name: str):
        """
        Sets the note_name of this ApiOccurrence.
        An analysis note associated with this image, in the form \"projects/{projectId}/notes/{NOTE_ID}\" This field can be used as a filter in list requests.

        :param note_name: The note_name of this ApiOccurrence.
        :type note_name: str
        """

        self._note_name = note_name

    @property
    def kind(self) -> ApiNoteKind:
        """
        Gets the kind of this ApiOccurrence.
        Output only. This explicitly denotes which of the `Occurrence` details are specified. This field can be used as a filter in list requests.

        :return: The kind of this ApiOccurrence.
        :rtype: ApiNoteKind
        """
        return self._kind

    @kind.setter
    def kind(self, kind: ApiNoteKind):
        """
        Sets the kind of this ApiOccurrence.
        Output only. This explicitly denotes which of the `Occurrence` details are specified. This field can be used as a filter in list requests.

        :param kind: The kind of this ApiOccurrence.
        :type kind: ApiNoteKind
        """

        self._kind = kind

    @property
    def vulnerability_details(self) -> VulnerabilityTypeVulnerabilityDetails:
        """
        Gets the vulnerability_details of this ApiOccurrence.
        Details of a security vulnerability note.

        :return: The vulnerability_details of this ApiOccurrence.
        :rtype: VulnerabilityTypeVulnerabilityDetails
        """
        return self._vulnerability_details

    @vulnerability_details.setter
    def vulnerability_details(self, vulnerability_details: VulnerabilityTypeVulnerabilityDetails):
        """
        Sets the vulnerability_details of this ApiOccurrence.
        Details of a security vulnerability note.

        :param vulnerability_details: The vulnerability_details of this ApiOccurrence.
        :type vulnerability_details: VulnerabilityTypeVulnerabilityDetails
        """

        self._vulnerability_details = vulnerability_details

    @property
    def build_details(self) -> ApiBuildDetails:
        """
        Gets the build_details of this ApiOccurrence.
        Build details for a verifiable build.

        :return: The build_details of this ApiOccurrence.
        :rtype: ApiBuildDetails
        """
        return self._build_details

    @build_details.setter
    def build_details(self, build_details: ApiBuildDetails):
        """
        Sets the build_details of this ApiOccurrence.
        Build details for a verifiable build.

        :param build_details: The build_details of this ApiOccurrence.
        :type build_details: ApiBuildDetails
        """

        self._build_details = build_details

    @property
    def derived_image(self) -> DockerImageDerived:
        """
        Gets the derived_image of this ApiOccurrence.
        Describes how this resource derives from the basis in the associated note.

        :return: The derived_image of this ApiOccurrence.
        :rtype: DockerImageDerived
        """
        return self._derived_image

    @derived_image.setter
    def derived_image(self, derived_image: DockerImageDerived):
        """
        Sets the derived_image of this ApiOccurrence.
        Describes how this resource derives from the basis in the associated note.

        :param derived_image: The derived_image of this ApiOccurrence.
        :type derived_image: DockerImageDerived
        """

        self._derived_image = derived_image

    @property
    def installation(self) -> PackageManagerInstallation:
        """
        Gets the installation of this ApiOccurrence.
        Describes the installation of a package on the linked resource.

        :return: The installation of this ApiOccurrence.
        :rtype: PackageManagerInstallation
        """
        return self._installation

    @installation.setter
    def installation(self, installation: PackageManagerInstallation):
        """
        Sets the installation of this ApiOccurrence.
        Describes the installation of a package on the linked resource.

        :param installation: The installation of this ApiOccurrence.
        :type installation: PackageManagerInstallation
        """

        self._installation = installation

    @property
    def deployment(self) -> DeployableDeployment:
        """
        Gets the deployment of this ApiOccurrence.
        Describes the deployment of an artifact on a runtime.

        :return: The deployment of this ApiOccurrence.
        :rtype: DeployableDeployment
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment: DeployableDeployment):
        """
        Sets the deployment of this ApiOccurrence.
        Describes the deployment of an artifact on a runtime.

        :param deployment: The deployment of this ApiOccurrence.
        :type deployment: DeployableDeployment
        """

        self._deployment = deployment

    @property
    def discovered(self) -> DiscoveryDiscovered:
        """
        Gets the discovered of this ApiOccurrence.
        Describes the initial scan status for this resource.

        :return: The discovered of this ApiOccurrence.
        :rtype: DiscoveryDiscovered
        """
        return self._discovered

    @discovered.setter
    def discovered(self, discovered: DiscoveryDiscovered):
        """
        Sets the discovered of this ApiOccurrence.
        Describes the initial scan status for this resource.

        :param discovered: The discovered of this ApiOccurrence.
        :type discovered: DiscoveryDiscovered
        """

        self._discovered = discovered

    @property
    def remediation(self) -> str:
        """
        Gets the remediation of this ApiOccurrence.

        :return: The remediation of this ApiOccurrence.
        :rtype: str
        """
        return self._remediation

    @remediation.setter
    def remediation(self, remediation: str):
        """
        Sets the remediation of this ApiOccurrence.

        :param remediation: The remediation of this ApiOccurrence.
        :type remediation: str
        """

        self._remediation = remediation

    @property
    def create_time(self) -> datetime:
        """
        Gets the create_time of this ApiOccurrence.
        Output only. The time this `Occurrence` was created.

        :return: The create_time of this ApiOccurrence.
        :rtype: datetime
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time: datetime):
        """
        Sets the create_time of this ApiOccurrence.
        Output only. The time this `Occurrence` was created.

        :param create_time: The create_time of this ApiOccurrence.
        :type create_time: datetime
        """

        self._create_time = create_time

    @property
    def update_time(self) -> datetime:
        """
        Gets the update_time of this ApiOccurrence.
        Output only. The time this `Occurrence` was last updated.

        :return: The update_time of this ApiOccurrence.
        :rtype: datetime
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time: datetime):
        """
        Sets the update_time of this ApiOccurrence.
        Output only. The time this `Occurrence` was last updated.

        :param update_time: The update_time of this ApiOccurrence.
        :type update_time: datetime
        """

        self._update_time = update_time

