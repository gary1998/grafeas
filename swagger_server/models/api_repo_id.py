# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.api_project_repo_id import ApiProjectRepoId
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiRepoId(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, project_repo_id: ApiProjectRepoId=None, uid: str=None):
        """
        ApiRepoId - a model defined in Swagger

        :param project_repo_id: The project_repo_id of this ApiRepoId.
        :type project_repo_id: ApiProjectRepoId
        :param uid: The uid of this ApiRepoId.
        :type uid: str
        """
        self.swagger_types = {
            'project_repo_id': ApiProjectRepoId,
            'uid': str
        }

        self.attribute_map = {
            'project_repo_id': 'project_repo_id',
            'uid': 'uid'
        }

        self._project_repo_id = project_repo_id
        self._uid = uid

    @classmethod
    def from_dict(cls, dikt) -> 'ApiRepoId':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiRepoId of this ApiRepoId.
        :rtype: ApiRepoId
        """
        return deserialize_model(dikt, cls)

    @property
    def project_repo_id(self) -> ApiProjectRepoId:
        """
        Gets the project_repo_id of this ApiRepoId.
        A combination of a project ID and a repo name.

        :return: The project_repo_id of this ApiRepoId.
        :rtype: ApiProjectRepoId
        """
        return self._project_repo_id

    @project_repo_id.setter
    def project_repo_id(self, project_repo_id: ApiProjectRepoId):
        """
        Sets the project_repo_id of this ApiRepoId.
        A combination of a project ID and a repo name.

        :param project_repo_id: The project_repo_id of this ApiRepoId.
        :type project_repo_id: ApiProjectRepoId
        """

        self._project_repo_id = project_repo_id

    @property
    def uid(self) -> str:
        """
        Gets the uid of this ApiRepoId.
        A server-assigned, globally unique identifier.

        :return: The uid of this ApiRepoId.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid: str):
        """
        Sets the uid of this ApiRepoId.
        A server-assigned, globally unique identifier.

        :param uid: The uid of this ApiRepoId.
        :type uid: str
        """

        self._uid = uid

