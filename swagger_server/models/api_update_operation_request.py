# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.operation import Operation
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiUpdateOperationRequest(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name: str=None, operation: Operation=None):
        """
        ApiUpdateOperationRequest - a model defined in Swagger

        :param name: The name of this ApiUpdateOperationRequest.
        :type name: str
        :param operation: The operation of this ApiUpdateOperationRequest.
        :type operation: Operation
        """
        self.swagger_types = {
            'name': str,
            'operation': Operation
        }

        self.attribute_map = {
            'name': 'name',
            'operation': 'operation'
        }

        self._name = name
        self._operation = operation

    @classmethod
    def from_dict(cls, dikt) -> 'ApiUpdateOperationRequest':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiUpdateOperationRequest of this ApiUpdateOperationRequest.
        :rtype: ApiUpdateOperationRequest
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """
        Gets the name of this ApiUpdateOperationRequest.
        The name of the Operation. Should be of the form \"projects/{projectId}/operations/{operationId}\".

        :return: The name of this ApiUpdateOperationRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this ApiUpdateOperationRequest.
        The name of the Operation. Should be of the form \"projects/{projectId}/operations/{operationId}\".

        :param name: The name of this ApiUpdateOperationRequest.
        :type name: str
        """

        self._name = name

    @property
    def operation(self) -> Operation:
        """
        Gets the operation of this ApiUpdateOperationRequest.
        The operation to create.

        :return: The operation of this ApiUpdateOperationRequest.
        :rtype: Operation
        """
        return self._operation

    @operation.setter
    def operation(self, operation: Operation):
        """
        Sets the operation of this ApiUpdateOperationRequest.
        The operation to create.

        :param operation: The operation of this ApiUpdateOperationRequest.
        :type operation: Operation
        """

        self._operation = operation

