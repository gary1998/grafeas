# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.vulnerability_type_detail import VulnerabilityTypeDetail
from swagger_server.models.vulnerability_type_severity import VulnerabilityTypeSeverity
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ApiVulnerabilityType(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cvss_score: float=None, severity: VulnerabilityTypeSeverity=None, details: List[VulnerabilityTypeDetail]=None):
        """
        ApiVulnerabilityType - a model defined in Swagger

        :param cvss_score: The cvss_score of this ApiVulnerabilityType.
        :type cvss_score: float
        :param severity: The severity of this ApiVulnerabilityType.
        :type severity: VulnerabilityTypeSeverity
        :param details: The details of this ApiVulnerabilityType.
        :type details: List[VulnerabilityTypeDetail]
        """
        self.swagger_types = {
            'cvss_score': float,
            'severity': VulnerabilityTypeSeverity,
            'details': List[VulnerabilityTypeDetail]
        }

        self.attribute_map = {
            'cvss_score': 'cvss_score',
            'severity': 'severity',
            'details': 'details'
        }

        self._cvss_score = cvss_score
        self._severity = severity
        self._details = details

    @classmethod
    def from_dict(cls, dikt) -> 'ApiVulnerabilityType':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The apiVulnerabilityType of this ApiVulnerabilityType.
        :rtype: ApiVulnerabilityType
        """
        return deserialize_model(dikt, cls)

    @property
    def cvss_score(self) -> float:
        """
        Gets the cvss_score of this ApiVulnerabilityType.
        The CVSS score for this Vulnerability.

        :return: The cvss_score of this ApiVulnerabilityType.
        :rtype: float
        """
        return self._cvss_score

    @cvss_score.setter
    def cvss_score(self, cvss_score: float):
        """
        Sets the cvss_score of this ApiVulnerabilityType.
        The CVSS score for this Vulnerability.

        :param cvss_score: The cvss_score of this ApiVulnerabilityType.
        :type cvss_score: float
        """

        self._cvss_score = cvss_score

    @property
    def severity(self) -> VulnerabilityTypeSeverity:
        """
        Gets the severity of this ApiVulnerabilityType.

        :return: The severity of this ApiVulnerabilityType.
        :rtype: VulnerabilityTypeSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity: VulnerabilityTypeSeverity):
        """
        Sets the severity of this ApiVulnerabilityType.

        :param severity: The severity of this ApiVulnerabilityType.
        :type severity: VulnerabilityTypeSeverity
        """

        self._severity = severity

    @property
    def details(self) -> List[VulnerabilityTypeDetail]:
        """
        Gets the details of this ApiVulnerabilityType.
        All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.

        :return: The details of this ApiVulnerabilityType.
        :rtype: List[VulnerabilityTypeDetail]
        """
        return self._details

    @details.setter
    def details(self, details: List[VulnerabilityTypeDetail]):
        """
        Sets the details of this ApiVulnerabilityType.
        All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.

        :param details: The details of this ApiVulnerabilityType.
        :type details: List[VulnerabilityTypeDetail]
        """

        self._details = details

