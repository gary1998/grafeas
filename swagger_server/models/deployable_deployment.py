# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.deployment_platform import DeploymentPlatform
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class DeployableDeployment(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, user_email: str=None, deploy_time: datetime=None, undeploy_time: datetime=None, config: str=None, address: str=None, resource_uri: List[str]=None, platform: DeploymentPlatform=None):
        """
        DeployableDeployment - a model defined in Swagger

        :param user_email: The user_email of this DeployableDeployment.
        :type user_email: str
        :param deploy_time: The deploy_time of this DeployableDeployment.
        :type deploy_time: datetime
        :param undeploy_time: The undeploy_time of this DeployableDeployment.
        :type undeploy_time: datetime
        :param config: The config of this DeployableDeployment.
        :type config: str
        :param address: The address of this DeployableDeployment.
        :type address: str
        :param resource_uri: The resource_uri of this DeployableDeployment.
        :type resource_uri: List[str]
        :param platform: The platform of this DeployableDeployment.
        :type platform: DeploymentPlatform
        """
        self.swagger_types = {
            'user_email': str,
            'deploy_time': datetime,
            'undeploy_time': datetime,
            'config': str,
            'address': str,
            'resource_uri': List[str],
            'platform': DeploymentPlatform
        }

        self.attribute_map = {
            'user_email': 'user_email',
            'deploy_time': 'deploy_time',
            'undeploy_time': 'undeploy_time',
            'config': 'config',
            'address': 'address',
            'resource_uri': 'resource_uri',
            'platform': 'platform'
        }

        self._user_email = user_email
        self._deploy_time = deploy_time
        self._undeploy_time = undeploy_time
        self._config = config
        self._address = address
        self._resource_uri = resource_uri
        self._platform = platform

    @classmethod
    def from_dict(cls, dikt) -> 'DeployableDeployment':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeployableDeployment of this DeployableDeployment.
        :rtype: DeployableDeployment
        """
        return deserialize_model(dikt, cls)

    @property
    def user_email(self) -> str:
        """
        Gets the user_email of this DeployableDeployment.
        Identity of the user that triggered this deployment.

        :return: The user_email of this DeployableDeployment.
        :rtype: str
        """
        return self._user_email

    @user_email.setter
    def user_email(self, user_email: str):
        """
        Sets the user_email of this DeployableDeployment.
        Identity of the user that triggered this deployment.

        :param user_email: The user_email of this DeployableDeployment.
        :type user_email: str
        """

        self._user_email = user_email

    @property
    def deploy_time(self) -> datetime:
        """
        Gets the deploy_time of this DeployableDeployment.
        Beginning of the lifetime of this deployment.

        :return: The deploy_time of this DeployableDeployment.
        :rtype: datetime
        """
        return self._deploy_time

    @deploy_time.setter
    def deploy_time(self, deploy_time: datetime):
        """
        Sets the deploy_time of this DeployableDeployment.
        Beginning of the lifetime of this deployment.

        :param deploy_time: The deploy_time of this DeployableDeployment.
        :type deploy_time: datetime
        """

        self._deploy_time = deploy_time

    @property
    def undeploy_time(self) -> datetime:
        """
        Gets the undeploy_time of this DeployableDeployment.
        End of the lifetime of this deployment.

        :return: The undeploy_time of this DeployableDeployment.
        :rtype: datetime
        """
        return self._undeploy_time

    @undeploy_time.setter
    def undeploy_time(self, undeploy_time: datetime):
        """
        Sets the undeploy_time of this DeployableDeployment.
        End of the lifetime of this deployment.

        :param undeploy_time: The undeploy_time of this DeployableDeployment.
        :type undeploy_time: datetime
        """

        self._undeploy_time = undeploy_time

    @property
    def config(self) -> str:
        """
        Gets the config of this DeployableDeployment.
        Configuration used to create this deployment.

        :return: The config of this DeployableDeployment.
        :rtype: str
        """
        return self._config

    @config.setter
    def config(self, config: str):
        """
        Sets the config of this DeployableDeployment.
        Configuration used to create this deployment.

        :param config: The config of this DeployableDeployment.
        :type config: str
        """

        self._config = config

    @property
    def address(self) -> str:
        """
        Gets the address of this DeployableDeployment.
        Address of the runtime element hosting this deployment.

        :return: The address of this DeployableDeployment.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """
        Sets the address of this DeployableDeployment.
        Address of the runtime element hosting this deployment.

        :param address: The address of this DeployableDeployment.
        :type address: str
        """

        self._address = address

    @property
    def resource_uri(self) -> List[str]:
        """
        Gets the resource_uri of this DeployableDeployment.
        Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name.

        :return: The resource_uri of this DeployableDeployment.
        :rtype: List[str]
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri: List[str]):
        """
        Sets the resource_uri of this DeployableDeployment.
        Output only. Resource URI for the artifact being deployed taken from the deployable field with the same name.

        :param resource_uri: The resource_uri of this DeployableDeployment.
        :type resource_uri: List[str]
        """

        self._resource_uri = resource_uri

    @property
    def platform(self) -> DeploymentPlatform:
        """
        Gets the platform of this DeployableDeployment.
        Platform hosting this deployment.

        :return: The platform of this DeployableDeployment.
        :rtype: DeploymentPlatform
        """
        return self._platform

    @platform.setter
    def platform(self, platform: DeploymentPlatform):
        """
        Sets the platform of this DeployableDeployment.
        Platform hosting this deployment.

        :param platform: The platform of this DeployableDeployment.
        :type platform: DeploymentPlatform
        """

        self._platform = platform

