# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.docker_image_fingerprint import DockerImageFingerprint
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class DockerImageBasis(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, resource_url: str=None, fingerprint: DockerImageFingerprint=None):
        """
        DockerImageBasis - a model defined in Swagger

        :param resource_url: The resource_url of this DockerImageBasis.
        :type resource_url: str
        :param fingerprint: The fingerprint of this DockerImageBasis.
        :type fingerprint: DockerImageFingerprint
        """
        self.swagger_types = {
            'resource_url': str,
            'fingerprint': DockerImageFingerprint
        }

        self.attribute_map = {
            'resource_url': 'resource_url',
            'fingerprint': 'fingerprint'
        }

        self._resource_url = resource_url
        self._fingerprint = fingerprint

    @classmethod
    def from_dict(cls, dikt) -> 'DockerImageBasis':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DockerImageBasis of this DockerImageBasis.
        :rtype: DockerImageBasis
        """
        return deserialize_model(dikt, cls)

    @property
    def resource_url(self) -> str:
        """
        Gets the resource_url of this DockerImageBasis.
        The resource_url for the resource representing the basis of associated occurrence images.

        :return: The resource_url of this DockerImageBasis.
        :rtype: str
        """
        return self._resource_url

    @resource_url.setter
    def resource_url(self, resource_url: str):
        """
        Sets the resource_url of this DockerImageBasis.
        The resource_url for the resource representing the basis of associated occurrence images.

        :param resource_url: The resource_url of this DockerImageBasis.
        :type resource_url: str
        """

        self._resource_url = resource_url

    @property
    def fingerprint(self) -> DockerImageFingerprint:
        """
        Gets the fingerprint of this DockerImageBasis.

        :return: The fingerprint of this DockerImageBasis.
        :rtype: DockerImageFingerprint
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint: DockerImageFingerprint):
        """
        Sets the fingerprint of this DockerImageBasis.

        :param fingerprint: The fingerprint of this DockerImageBasis.
        :type fingerprint: DockerImageFingerprint
        """

        self._fingerprint = fingerprint

