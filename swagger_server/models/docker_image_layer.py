# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.layer_directive import LayerDirective
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class DockerImageLayer(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, directive: LayerDirective=None, arguments: str=None):
        """
        DockerImageLayer - a model defined in Swagger

        :param directive: The directive of this DockerImageLayer.
        :type directive: LayerDirective
        :param arguments: The arguments of this DockerImageLayer.
        :type arguments: str
        """
        self.swagger_types = {
            'directive': LayerDirective,
            'arguments': str
        }

        self.attribute_map = {
            'directive': 'directive',
            'arguments': 'arguments'
        }

        self._directive = directive
        self._arguments = arguments

    @classmethod
    def from_dict(cls, dikt) -> 'DockerImageLayer':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DockerImageLayer of this DockerImageLayer.
        :rtype: DockerImageLayer
        """
        return deserialize_model(dikt, cls)

    @property
    def directive(self) -> LayerDirective:
        """
        Gets the directive of this DockerImageLayer.
        The recovered Dockerfile directive used to construct this layer.

        :return: The directive of this DockerImageLayer.
        :rtype: LayerDirective
        """
        return self._directive

    @directive.setter
    def directive(self, directive: LayerDirective):
        """
        Sets the directive of this DockerImageLayer.
        The recovered Dockerfile directive used to construct this layer.

        :param directive: The directive of this DockerImageLayer.
        :type directive: LayerDirective
        """

        self._directive = directive

    @property
    def arguments(self) -> str:
        """
        Gets the arguments of this DockerImageLayer.
        The recovered arguments to the Dockerfile directive.

        :return: The arguments of this DockerImageLayer.
        :rtype: str
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments: str):
        """
        Sets the arguments of this DockerImageLayer.
        The recovered arguments to the Dockerfile directive.

        :param arguments: The arguments of this DockerImageLayer.
        :type arguments: str
        """

        self._arguments = arguments

