# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.vulnerability_type_version import VulnerabilityTypeVersion
from swagger_server.models.vulnerability_type_vulnerability_location import VulnerabilityTypeVulnerabilityLocation
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class VulnerabilityTypeDetail(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cpe_uri: str=None, package: str=None, min_affected_version: VulnerabilityTypeVersion=None, max_affected_version: VulnerabilityTypeVersion=None, severity_name: str=None, description: str=None, fixed_location: VulnerabilityTypeVulnerabilityLocation=None, package_type: str=None):
        """
        VulnerabilityTypeDetail - a model defined in Swagger

        :param cpe_uri: The cpe_uri of this VulnerabilityTypeDetail.
        :type cpe_uri: str
        :param package: The package of this VulnerabilityTypeDetail.
        :type package: str
        :param min_affected_version: The min_affected_version of this VulnerabilityTypeDetail.
        :type min_affected_version: VulnerabilityTypeVersion
        :param max_affected_version: The max_affected_version of this VulnerabilityTypeDetail.
        :type max_affected_version: VulnerabilityTypeVersion
        :param severity_name: The severity_name of this VulnerabilityTypeDetail.
        :type severity_name: str
        :param description: The description of this VulnerabilityTypeDetail.
        :type description: str
        :param fixed_location: The fixed_location of this VulnerabilityTypeDetail.
        :type fixed_location: VulnerabilityTypeVulnerabilityLocation
        :param package_type: The package_type of this VulnerabilityTypeDetail.
        :type package_type: str
        """
        self.swagger_types = {
            'cpe_uri': str,
            'package': str,
            'min_affected_version': VulnerabilityTypeVersion,
            'max_affected_version': VulnerabilityTypeVersion,
            'severity_name': str,
            'description': str,
            'fixed_location': VulnerabilityTypeVulnerabilityLocation,
            'package_type': str
        }

        self.attribute_map = {
            'cpe_uri': 'cpe_uri',
            'package': 'package',
            'min_affected_version': 'min_affected_version',
            'max_affected_version': 'max_affected_version',
            'severity_name': 'severity_name',
            'description': 'description',
            'fixed_location': 'fixed_location',
            'package_type': 'package_type'
        }

        self._cpe_uri = cpe_uri
        self._package = package
        self._min_affected_version = min_affected_version
        self._max_affected_version = max_affected_version
        self._severity_name = severity_name
        self._description = description
        self._fixed_location = fixed_location
        self._package_type = package_type

    @classmethod
    def from_dict(cls, dikt) -> 'VulnerabilityTypeDetail':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VulnerabilityTypeDetail of this VulnerabilityTypeDetail.
        :rtype: VulnerabilityTypeDetail
        """
        return deserialize_model(dikt, cls)

    @property
    def cpe_uri(self) -> str:
        """
        Gets the cpe_uri of this VulnerabilityTypeDetail.
        The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in which the vulnerability manifests.  Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.

        :return: The cpe_uri of this VulnerabilityTypeDetail.
        :rtype: str
        """
        return self._cpe_uri

    @cpe_uri.setter
    def cpe_uri(self, cpe_uri: str):
        """
        Sets the cpe_uri of this VulnerabilityTypeDetail.
        The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in which the vulnerability manifests.  Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.

        :param cpe_uri: The cpe_uri of this VulnerabilityTypeDetail.
        :type cpe_uri: str
        """

        self._cpe_uri = cpe_uri

    @property
    def package(self) -> str:
        """
        Gets the package of this VulnerabilityTypeDetail.
        The name of the package where the vulnerability was found. This field can be used as a filter in list requests.

        :return: The package of this VulnerabilityTypeDetail.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package: str):
        """
        Sets the package of this VulnerabilityTypeDetail.
        The name of the package where the vulnerability was found. This field can be used as a filter in list requests.

        :param package: The package of this VulnerabilityTypeDetail.
        :type package: str
        """

        self._package = package

    @property
    def min_affected_version(self) -> VulnerabilityTypeVersion:
        """
        Gets the min_affected_version of this VulnerabilityTypeDetail.
        The min version of the package in which the vulnerability exists.

        :return: The min_affected_version of this VulnerabilityTypeDetail.
        :rtype: VulnerabilityTypeVersion
        """
        return self._min_affected_version

    @min_affected_version.setter
    def min_affected_version(self, min_affected_version: VulnerabilityTypeVersion):
        """
        Sets the min_affected_version of this VulnerabilityTypeDetail.
        The min version of the package in which the vulnerability exists.

        :param min_affected_version: The min_affected_version of this VulnerabilityTypeDetail.
        :type min_affected_version: VulnerabilityTypeVersion
        """

        self._min_affected_version = min_affected_version

    @property
    def max_affected_version(self) -> VulnerabilityTypeVersion:
        """
        Gets the max_affected_version of this VulnerabilityTypeDetail.
        The max version of the package in which the vulnerability exists. This field can be used as a filter in list requests.

        :return: The max_affected_version of this VulnerabilityTypeDetail.
        :rtype: VulnerabilityTypeVersion
        """
        return self._max_affected_version

    @max_affected_version.setter
    def max_affected_version(self, max_affected_version: VulnerabilityTypeVersion):
        """
        Sets the max_affected_version of this VulnerabilityTypeDetail.
        The max version of the package in which the vulnerability exists. This field can be used as a filter in list requests.

        :param max_affected_version: The max_affected_version of this VulnerabilityTypeDetail.
        :type max_affected_version: VulnerabilityTypeVersion
        """

        self._max_affected_version = max_affected_version

    @property
    def severity_name(self) -> str:
        """
        Gets the severity_name of this VulnerabilityTypeDetail.
        The severity (eg: distro assigned severity) for this vulnerability.

        :return: The severity_name of this VulnerabilityTypeDetail.
        :rtype: str
        """
        return self._severity_name

    @severity_name.setter
    def severity_name(self, severity_name: str):
        """
        Sets the severity_name of this VulnerabilityTypeDetail.
        The severity (eg: distro assigned severity) for this vulnerability.

        :param severity_name: The severity_name of this VulnerabilityTypeDetail.
        :type severity_name: str
        """

        self._severity_name = severity_name

    @property
    def description(self) -> str:
        """
        Gets the description of this VulnerabilityTypeDetail.
        A vendor-specific description of this note.

        :return: The description of this VulnerabilityTypeDetail.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """
        Sets the description of this VulnerabilityTypeDetail.
        A vendor-specific description of this note.

        :param description: The description of this VulnerabilityTypeDetail.
        :type description: str
        """

        self._description = description

    @property
    def fixed_location(self) -> VulnerabilityTypeVulnerabilityLocation:
        """
        Gets the fixed_location of this VulnerabilityTypeDetail.
        The fix for this specific package version.

        :return: The fixed_location of this VulnerabilityTypeDetail.
        :rtype: VulnerabilityTypeVulnerabilityLocation
        """
        return self._fixed_location

    @fixed_location.setter
    def fixed_location(self, fixed_location: VulnerabilityTypeVulnerabilityLocation):
        """
        Sets the fixed_location of this VulnerabilityTypeDetail.
        The fix for this specific package version.

        :param fixed_location: The fixed_location of this VulnerabilityTypeDetail.
        :type fixed_location: VulnerabilityTypeVulnerabilityLocation
        """

        self._fixed_location = fixed_location

    @property
    def package_type(self) -> str:
        """
        Gets the package_type of this VulnerabilityTypeDetail.

        :return: The package_type of this VulnerabilityTypeDetail.
        :rtype: str
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type: str):
        """
        Sets the package_type of this VulnerabilityTypeDetail.

        :param package_type: The package_type of this VulnerabilityTypeDetail.
        :type package_type: str
        """

        self._package_type = package_type

