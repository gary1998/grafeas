# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.vulnerability_type_vulnerability_location import VulnerabilityTypeVulnerabilityLocation
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class VulnerabilityTypePackageIssue(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, affected_location: VulnerabilityTypeVulnerabilityLocation=None, fixed_location: VulnerabilityTypeVulnerabilityLocation=None, severity_name: str=None):
        """
        VulnerabilityTypePackageIssue - a model defined in Swagger

        :param affected_location: The affected_location of this VulnerabilityTypePackageIssue.
        :type affected_location: VulnerabilityTypeVulnerabilityLocation
        :param fixed_location: The fixed_location of this VulnerabilityTypePackageIssue.
        :type fixed_location: VulnerabilityTypeVulnerabilityLocation
        :param severity_name: The severity_name of this VulnerabilityTypePackageIssue.
        :type severity_name: str
        """
        self.swagger_types = {
            'affected_location': VulnerabilityTypeVulnerabilityLocation,
            'fixed_location': VulnerabilityTypeVulnerabilityLocation,
            'severity_name': str
        }

        self.attribute_map = {
            'affected_location': 'affected_location',
            'fixed_location': 'fixed_location',
            'severity_name': 'severity_name'
        }

        self._affected_location = affected_location
        self._fixed_location = fixed_location
        self._severity_name = severity_name

    @classmethod
    def from_dict(cls, dikt) -> 'VulnerabilityTypePackageIssue':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VulnerabilityTypePackageIssue of this VulnerabilityTypePackageIssue.
        :rtype: VulnerabilityTypePackageIssue
        """
        return deserialize_model(dikt, cls)

    @property
    def affected_location(self) -> VulnerabilityTypeVulnerabilityLocation:
        """
        Gets the affected_location of this VulnerabilityTypePackageIssue.
        The location of the vulnerability.

        :return: The affected_location of this VulnerabilityTypePackageIssue.
        :rtype: VulnerabilityTypeVulnerabilityLocation
        """
        return self._affected_location

    @affected_location.setter
    def affected_location(self, affected_location: VulnerabilityTypeVulnerabilityLocation):
        """
        Sets the affected_location of this VulnerabilityTypePackageIssue.
        The location of the vulnerability.

        :param affected_location: The affected_location of this VulnerabilityTypePackageIssue.
        :type affected_location: VulnerabilityTypeVulnerabilityLocation
        """

        self._affected_location = affected_location

    @property
    def fixed_location(self) -> VulnerabilityTypeVulnerabilityLocation:
        """
        Gets the fixed_location of this VulnerabilityTypePackageIssue.
        The location of the available fix for vulnerability.

        :return: The fixed_location of this VulnerabilityTypePackageIssue.
        :rtype: VulnerabilityTypeVulnerabilityLocation
        """
        return self._fixed_location

    @fixed_location.setter
    def fixed_location(self, fixed_location: VulnerabilityTypeVulnerabilityLocation):
        """
        Sets the fixed_location of this VulnerabilityTypePackageIssue.
        The location of the available fix for vulnerability.

        :param fixed_location: The fixed_location of this VulnerabilityTypePackageIssue.
        :type fixed_location: VulnerabilityTypeVulnerabilityLocation
        """

        self._fixed_location = fixed_location

    @property
    def severity_name(self) -> str:
        """
        Gets the severity_name of this VulnerabilityTypePackageIssue.
        The severity (eg: distro assigned severity) for this vulnerability.

        :return: The severity_name of this VulnerabilityTypePackageIssue.
        :rtype: str
        """
        return self._severity_name

    @severity_name.setter
    def severity_name(self, severity_name: str):
        """
        Sets the severity_name of this VulnerabilityTypePackageIssue.
        The severity (eg: distro assigned severity) for this vulnerability.

        :param severity_name: The severity_name of this VulnerabilityTypePackageIssue.
        :type severity_name: str
        """

        self._severity_name = severity_name

