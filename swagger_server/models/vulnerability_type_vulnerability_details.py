# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.vulnerability_type_package_issue import VulnerabilityTypePackageIssue
from swagger_server.models.vulnerability_type_severity import VulnerabilityTypeSeverity
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class VulnerabilityTypeVulnerabilityDetails(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, type: str=None, severity: VulnerabilityTypeSeverity=None, cvss_score: float=None, package_issue: List[VulnerabilityTypePackageIssue]=None):
        """
        VulnerabilityTypeVulnerabilityDetails - a model defined in Swagger

        :param type: The type of this VulnerabilityTypeVulnerabilityDetails.
        :type type: str
        :param severity: The severity of this VulnerabilityTypeVulnerabilityDetails.
        :type severity: VulnerabilityTypeSeverity
        :param cvss_score: The cvss_score of this VulnerabilityTypeVulnerabilityDetails.
        :type cvss_score: float
        :param package_issue: The package_issue of this VulnerabilityTypeVulnerabilityDetails.
        :type package_issue: List[VulnerabilityTypePackageIssue]
        """
        self.swagger_types = {
            'type': str,
            'severity': VulnerabilityTypeSeverity,
            'cvss_score': float,
            'package_issue': List[VulnerabilityTypePackageIssue]
        }

        self.attribute_map = {
            'type': 'type',
            'severity': 'severity',
            'cvss_score': 'cvss_score',
            'package_issue': 'package_issue'
        }

        self._type = type
        self._severity = severity
        self._cvss_score = cvss_score
        self._package_issue = package_issue

    @classmethod
    def from_dict(cls, dikt) -> 'VulnerabilityTypeVulnerabilityDetails':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VulnerabilityTypeVulnerabilityDetails of this VulnerabilityTypeVulnerabilityDetails.
        :rtype: VulnerabilityTypeVulnerabilityDetails
        """
        return deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """
        Gets the type of this VulnerabilityTypeVulnerabilityDetails.

        :return: The type of this VulnerabilityTypeVulnerabilityDetails.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """
        Sets the type of this VulnerabilityTypeVulnerabilityDetails.

        :param type: The type of this VulnerabilityTypeVulnerabilityDetails.
        :type type: str
        """

        self._type = type

    @property
    def severity(self) -> VulnerabilityTypeSeverity:
        """
        Gets the severity of this VulnerabilityTypeVulnerabilityDetails.
        Output only. The note provider assigned Severity of the vulnerability.

        :return: The severity of this VulnerabilityTypeVulnerabilityDetails.
        :rtype: VulnerabilityTypeSeverity
        """
        return self._severity

    @severity.setter
    def severity(self, severity: VulnerabilityTypeSeverity):
        """
        Sets the severity of this VulnerabilityTypeVulnerabilityDetails.
        Output only. The note provider assigned Severity of the vulnerability.

        :param severity: The severity of this VulnerabilityTypeVulnerabilityDetails.
        :type severity: VulnerabilityTypeSeverity
        """

        self._severity = severity

    @property
    def cvss_score(self) -> float:
        """
        Gets the cvss_score of this VulnerabilityTypeVulnerabilityDetails.
        Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.

        :return: The cvss_score of this VulnerabilityTypeVulnerabilityDetails.
        :rtype: float
        """
        return self._cvss_score

    @cvss_score.setter
    def cvss_score(self, cvss_score: float):
        """
        Sets the cvss_score of this VulnerabilityTypeVulnerabilityDetails.
        Output only. The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.

        :param cvss_score: The cvss_score of this VulnerabilityTypeVulnerabilityDetails.
        :type cvss_score: float
        """

        self._cvss_score = cvss_score

    @property
    def package_issue(self) -> List[VulnerabilityTypePackageIssue]:
        """
        Gets the package_issue of this VulnerabilityTypeVulnerabilityDetails.
        The set of affected locations and their fixes (if available) within the associated resource.

        :return: The package_issue of this VulnerabilityTypeVulnerabilityDetails.
        :rtype: List[VulnerabilityTypePackageIssue]
        """
        return self._package_issue

    @package_issue.setter
    def package_issue(self, package_issue: List[VulnerabilityTypePackageIssue]):
        """
        Sets the package_issue of this VulnerabilityTypeVulnerabilityDetails.
        The set of affected locations and their fixes (if available) within the associated resource.

        :param package_issue: The package_issue of this VulnerabilityTypeVulnerabilityDetails.
        :type package_issue: List[VulnerabilityTypePackageIssue]
        """

        self._package_issue = package_issue

